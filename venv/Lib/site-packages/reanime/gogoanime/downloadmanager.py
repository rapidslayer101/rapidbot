import threading
import requests
import os
import sys
import time
global x,dl
x=0
dl=0
def Handler(start,end,url,filename):
	global x,dl
	try:
		headers = {'Range': 'bytes=%d-%d' % (start, end)}
		r = requests.get(url, headers=headers, stream=True)
		total_length=int(r.headers['Content-Length'])
		with open(filename,'r+b') as fp:
			fp.seek(start)
			var=fp.tell()
			for data in r.iter_content(chunk_size=total_length//100):
				dl += len(data)
				fp.write(data)
		x=x+1
	except:
		exit("Please try again later")

def downdata(size,thread):
	global x,dl
	while x<thread and dl<size:
		percent=str(int((float)(dl/size)*100))
		sys.stdout.write("\rDowloading... %s%% [%s / %s]" %(percent,dl,size))
		sys.stdout.flush()
		time.sleep(1)
	sys.stdout.write("\rDownload Completed")
	sys.stdout.flush()


def idmm(url,filename,directory,thread):
	global x,dl
	x=0
	dl=0
	print("File Name: "+filename)
	print("Path: "+directory)
	r=requests.head(url)
	size=int(r.headers['Content-Length'])
	threadno=thread
	part=size//threadno
	rest=size%threadno
	p=[]
	thread_d=[]
	temp=0

	for i in range(threadno):
		start=temp
		end=start+part
		temp=end
		p.append([start,end])
	p[len(p)-1][1]=p[len(p)-1][1]+rest
	ep_file=directory+filename+".mp4"
	fp = open(ep_file, "wb")
	fp.seek(size-1)
	fp.write(b'\0')
	fp.close()

	for i in range(len(p)):
		t=threading.Thread(target=Handler,args=(p[i][0],p[i][1],url,ep_file))
		thread_d.append(t)
		t.start()
	progress=threading.Thread(target=downdata,args=(size,thread,))
	progress.start()
	for thread in thread_d:
		thread.join()
	progress.join()
	print("\nNot but least..")
